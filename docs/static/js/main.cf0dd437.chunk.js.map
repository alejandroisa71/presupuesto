{"version":3,"sources":["helpers.js","components/ControlPresupuesto.js","components/Error.js","components/Formulario.js","components/Gasto.js","components/Listado.js","components/Pregunta.js","App.js","reportWebVitals.js","index.js"],"names":["revisarPresupuesto","presupuesto","restante","ControlPresupuesto","className","Error","mensaje","Formulario","guardarGasto","guardarCrearGasto","useState","nombre","guardarNombre","cantidad","guardarCantidad","error","guardarError","onSubmit","e","preventDefault","isNaN","trim","gasto","id","shortid","generate","type","placeholder","value","onChange","target","parseInt","Gasto","Listado","gastos","map","Pregunta","guardarPresupuesto","guardarRestante","actualizarPregunta","App","mostrarpregunta","guardarGastos","creargasto","useEffect","presupuestoRestante","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf0dd437.chunk.js","sourcesContent":["export const revisarPresupuesto =(presupuesto,restante)=>{\r\n    let clase;\r\n\r\n    if ((presupuesto /4) > restante) {\r\n        clase= 'alert alert-danger';\r\n    }else if ((presupuesto /2 ) > restante) {\r\n        clase = 'alert alert-warning';\r\n    }else {\r\n        clase= 'alert alert-success';\r\n    }\r\n    \r\n    return clase;\r\n}","import React,{Fragment} from 'react';\r\nimport{revisarPresupuesto} from '../helpers';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst ControlPresupuesto = ({presupuesto, restante}) => {\r\n    return ( \r\n        <Fragment>\r\n            <div className=\"alert alert-primary\">\r\n                Presupuesto: $ {presupuesto}\r\n            </div>\r\n            <div className={revisarPresupuesto(presupuesto,restante)}>\r\n                Restante: $ {restante}\r\n            </div>\r\n            \r\n        </Fragment>\r\n     );\r\n}\r\n\r\nControlPresupuesto.propTypes={\r\n    presupuesto: PropTypes.number.isRequired,\r\n    restante: PropTypes.number.isRequired\r\n\r\n}\r\n\r\n \r\nexport default ControlPresupuesto;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Error = ({mensaje}) =>(\r\n    <p className=\"alert alert-danger error\">{mensaje}</p>\r\n);\r\n\r\nError.propTypes={\r\n    mensaje: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Error;","import React,{useState} from 'react';\r\nimport Error from './Error';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Formulario = ({guardarGasto, guardarCrearGasto}) => {\r\n\r\n    const[nombre,guardarNombre]=useState(\"\");\r\n    const[cantidad,guardarCantidad]=useState(0);\r\n    const [error, guardarError]=useState(false);\r\n\r\n    //Cuando el usuario agrega un gasto\r\n    const agregarGasto =e =>{\r\n        e.preventDefault();\r\n        \r\n        //validar\r\n        if (cantidad < 1 || isNaN(cantidad) || nombre.trim()==='') {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n        guardarError(false);\r\n\r\n        // construir el gasto\r\n        const gasto ={\r\n            nombre,\r\n            cantidad,\r\n            id:shortid.generate()\r\n        }\r\n\r\n        // console.log(gasto);\r\n\r\n        // pasar el gasto al componente principal\r\n            guardarGasto(gasto);\r\n            guardarCrearGasto(true);\r\n\r\n        //resetear formulario\r\n        guardarNombre('');\r\n        guardarCantidad(0);        \r\n        \r\n    }\r\n\r\n    return (\r\n        <form\r\n            onSubmit={agregarGasto}\r\n        \r\n        >\r\n            <h2>Agrega tus gastos aquÃ­</h2>\r\n           \r\n             {error ? <Error mensaje=\"Ambos campos son obligatorios o Presupuesto Incorrecto\"/> : null }   \r\n            <div className=\"campo\">\r\n                <label>Nombre Gasto</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. Transporte\"\r\n                    value={nombre}\r\n                    onChange={e => guardarNombre(e.target.value)}\r\n                />\r\n            </div>\r\n            <div className=\"campo\">\r\n                <label>Cantidad Gasto</label>\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Ej. 300\"\r\n                    value={cantidad}\r\n                    onChange={e => guardarCantidad(parseInt(e.target.value,10))}\r\n                />\r\n            </div>\r\n\r\n            <input\r\n                type=\"submit\"\r\n                className=\"button-primary u-full-width\"\r\n                value=\"Agregar Gasto\"\r\n            />\r\n        </form>\r\n      );\r\n}\r\n\r\nFormulario.propTypes={\r\n    guardarGasto: PropTypes.func.isRequired,\r\n    guardarCrearGasto: PropTypes.func.isRequired,\r\n\r\n}\r\n \r\nexport default Formulario;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Gasto = ({gasto}) => (\r\n    <li className=\"gastos\">\r\n        <p>\r\n            {gasto.nombre}\r\n\r\n            <span className=\"gasto\">$ {gasto.cantidad}</span>\r\n        </p>\r\n    </li>\r\n);\r\n \r\nGasto.propTypes={\r\n    gasto: PropTypes.object.isRequired\r\n}\r\nexport default Gasto;","import React from 'react';\r\nimport Gasto from './Gasto';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Listado = ({gastos}) =>(\r\n    <div className=\"gastos-realizados\">\r\n        <h2>Listado</h2>\r\n            {gastos.map(gasto=>(\r\n                <Gasto\r\n                    key={gasto.id}\r\n                    gasto={gasto}\r\n                />\r\n            ))}\r\n    </div>\r\n);\r\n \r\nListado.propTypes={\r\n    gastos: PropTypes.array.isRequired\r\n}\r\nexport default Listado;","import React,{Fragment, useState} from 'react';\r\nimport Error from './Error';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Pregunta = ({guardarPresupuesto, guardarRestante, actualizarPregunta}) => {\r\n    \r\n    //definir el state\r\n    const [cantidad, guardarCantidad]=useState(0);\r\n    const [error, guardarError]=useState(false);\r\n\r\n    //Funcion que lee el presupuesto\r\n    const definirPresupuesto = e=>{\r\n        guardarCantidad(parseInt(e.target.value,10))\r\n    }\r\n\r\n    //Submit para definir el presupuesto\r\n    const agregarPresupuesto = e =>{\r\n        e.preventDefault();\r\n\r\n        //Validar\r\n        if (cantidad < 1 || isNaN(cantidad)) {\r\n            guardarError(true);\r\n            return;\r\n        }\r\n\r\n        //si se pasa la validacion\r\n        guardarError(false);\r\n        guardarPresupuesto(cantidad);\r\n        guardarRestante(cantidad);\r\n        actualizarPregunta(false);\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <h2>Coloca tu Presupuesto</h2>\r\n            {error ? <Error mensaje=\"El Presupuesto es Incorrecto\"/>  : null}\r\n\r\n            <form\r\n                onSubmit={agregarPresupuesto}\r\n            >\r\n                <input\r\n                    type=\"number\"\r\n                    className=\"u-full-width\"\r\n                    placeholder=\"Coloca tu presupuesto\"\r\n                    onChange={definirPresupuesto}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    className=\"button-primary u-full-width\"\r\n                    value=\"Definir Presupuesto\"\r\n                   \r\n                />\r\n            </form>\r\n        </Fragment>\r\n      );\r\n}\r\n\r\nPregunta.propTypes={\r\n    guardarPresupuesto: PropTypes.func.isRequired,\r\n    guardarRestante: PropTypes.func.isRequired,\r\n    actualizarPregunta: PropTypes.func.isRequired,\r\n\r\n}\r\n \r\nexport default Pregunta;","import React,{useState, useEffect} from 'react';\nimport ControlPresupuesto from './components/ControlPresupuesto';\nimport Formulario from './components/Formulario';\nimport Listado from './components/Listado';\nimport Pregunta from './components/Pregunta';\n\nfunction App() {\n\n  //Definir el state\n  const[presupuesto,guardarPresupuesto]=useState(0);\n  const [restante, guardarRestante]=useState(0);\n  const [mostrarpregunta, actualizarPregunta]=useState(true);\n  const [gastos, guardarGastos]=useState([]);\n  const [gasto, guardarGasto]=useState({});\n  const [creargasto, guardarCrearGasto]=useState(false);\n\n//UseEffect que actualiza el restante\n\nuseEffect(() => {\n  if (creargasto) {\n\n    //agrega el nuevo presupuesto\n    guardarGastos([\n      ...gastos,\n       gasto\n    ]);\n\n  \n    //resta del presupuesto actual\n    const presupuestoRestante = restante-gasto.cantidad;\n    guardarRestante(presupuestoRestante);\n\n    //Resetear a false\n    guardarCrearGasto(false);\n  }\n}, [gasto, creargasto, gastos, restante]);\n\n  \n    \n  \n\n  return (\n    <div className=\"container\">\n      <header>\n       <h1>Gasto Semanal</h1>\n       <div className=\"contenido-principal contenido\">\n         {mostrarpregunta ?\n            (\n              <Pregunta\n                guardarPresupuesto={guardarPresupuesto}\n                guardarRestante={guardarRestante}\n                actualizarPregunta={actualizarPregunta}\n              />\n\n            ) :  \n            (\n              <div className=\"row\">\n                <div className=\"one-half column\">\n                    <Formulario\n                      guardarGasto={guardarGasto}\n                      guardarCrearGasto={guardarCrearGasto}\n                    />\n                </div>\n                \n                <div className=\"one-half column\">\n                    <Listado\n                      gastos={gastos}\n                    />\n                    <ControlPresupuesto\n                        presupuesto={presupuesto}\n                        restante={restante}\n                    />\n                </div>\n              </div>\n            )\n         }\n    \n       </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}